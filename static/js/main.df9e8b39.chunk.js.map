{"version":3,"sources":["components/AppHeader.tsx","utils/utils.ts","store/store.ts","context/storeContext.ts","hooks/useStore.ts","components/RoundList.tsx","components/StopWatch.tsx","hooks/useStopWatch.ts","App.tsx","assistant/assistant.ts","context/assistantContext.ts","components/providers/AssistantProvider.tsx","components/GlobalStyle.tsx","components/providers/StoreProvider.tsx","components/providers/Providers.tsx","index.tsx"],"names":["AppHeader","Header","back","title","addZeroBefore","value","initialState","character","ms","s","m","h","isGoing","points","reducer","state","action","type","characterId","payload","length","push","actions","StoreContext","React","createContext","useStore","useContext","PositionedCard","styled","Card","MarginTextBox","TextBox","RoundList","memo","console","log","CardBody","style","height","alignItems","CardContent","cover","map","point","i","FlexContainer","div","TimeContainer","StopWatchContainer","StyledButton","Button","StopWatch","dispatch","interval","useRef","msRef","sRef","mRef","hRef","current","useEffect","clearInterval","setInterval","startStopWatch","pauseStopWatch","resetStopWatch","addRound","roundsNumber","useStopWatch","isAnyTime","Boolean","Body","fontSize","view","text","onClick","disabled","App","Container","initializeAssistant","getState","createAssistant","AssistantContext","AssistantProvider","children","assistantRef","stateRef","assistant","on","smart_app_data","id","initAssistant","Provider","themes","sber","createGlobalStyle","darkSber","eva","darkEva","joy","darkJoy","DocumentStyle","background","gradient","GlobalStyles","Theme","useMemo","StoreProvider","useReducer","Providers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEaA,EAAY,WAEvB,OACE,cAACC,EAAA,EAAD,CACEC,MAAM,EACNC,MAAO,qF,oECPAC,EAAgB,SAACC,GAC1B,MAAM,GAAN,OAAUA,EAAQ,EAAI,GAAK,KAA3B,OAAiCA,ICGxBC,EAAe,CACxBC,UAAW,OACXC,GAAI,EACJC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,SAAS,EACTC,OAAQ,IAGCC,EAAU,SAACC,EAAkBC,GACtC,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAO,2BAAKF,GAAZ,IAAmBR,UAAWS,EAAOE,cACzC,IAAK,QACD,OAAO,2BAAKH,GAAZ,IAAmBJ,EAAGK,EAAOG,UACjC,IAAK,QACD,OAAO,2BAAKJ,GAAZ,IAAmBL,EAAGM,EAAOG,UACjC,IAAK,SACD,OAAO,2BAAKJ,GAAZ,IAAmBP,GAAIQ,EAAOG,UAClC,IAAK,QACD,OAAO,2BAAKJ,GAAZ,IAAmBN,EAAGO,EAAOG,UACjC,IAAK,mBACD,OAAO,2BAAKJ,GAAZ,IAAmBH,SAAS,IAChC,IAAK,kBACD,OAAO,2BAAKG,GAAZ,IAAmBH,SAAS,IAChC,IAAK,cACD,OAAO,2BAAKG,GAAZ,IAAmBP,GAAI,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGE,OAAQ,KACxD,IAAK,YACD,IAAIA,EAAM,YAAOE,EAAMF,QAEvB,OADIA,EAAOO,OAAS,GAAGP,EAAOQ,KAAP,UAAejB,EAAcW,EAAMJ,GAAnC,YAAyCP,EAAcW,EAAML,GAA7D,YAAmEN,EAAcW,EAAMN,GAAvF,YAA6FL,EAAcW,EAAMP,MACjI,2BAAKO,GAAZ,IAAmBF,WACvB,QAAS,OAAOE,IAIXO,EACK,SAACJ,GAAD,MAAiC,CAAED,KAAM,gBAAiBC,gBAD/DI,EAEH,SAACH,GAAD,MAAsB,CAAEF,KAAM,QAASE,YAFpCG,EAGF,SAACH,GAAD,MAAsB,CAAEF,KAAM,SAAUE,YAHtCG,EAIH,SAACH,GAAD,MAAsB,CAAEF,KAAM,QAASE,YAJpCG,EAKH,SAACH,GAAD,MAAsB,CAAEF,KAAM,QAASE,YALpCG,EAMG,iBAAO,CAAEL,KAAM,gBANlBK,EAOO,iBAAO,CAAEL,KAAM,qBAPtBK,EAQM,iBAAO,CAAEL,KAAM,oBARrBK,EASC,iBAAO,CAAEL,KAAM,cC7ChBM,EAAeC,IAAMC,cAAkD,CAClFnB,EACA,kBAAM,QCHKoB,EAAW,WACtB,OAAOC,qBAAWJ,ICCdK,EAAiBC,YAAOC,IAAPD,CAAH,0FAMdE,EAAgBF,YAAOG,IAAPH,CAAH,sDAINI,EAAYT,IAAMU,MAAK,WAAO,IAAD,EACnBR,IADmB,mBAC/BX,EAD+B,UAGtC,OADAoB,QAAQC,IAAI,qBAER,mCAEQrB,EAAMF,OAAOO,QACb,cAACQ,EAAD,UACI,cAACS,EAAA,EAAD,CAAUC,MAAO,CAAEC,OAAQ,OAAQC,WAAY,UAA/C,SACI,cAACC,EAAA,EAAD,CAAaH,MAAO,CAAEC,OAAQ,QAAUG,OAAO,EAA/C,SAEQ3B,EAAMF,OAAO8B,KAAI,SAACC,EAAOC,GAAR,OACb,eAACd,EAAD,uCACUc,EAAI,EADd,KACmBD,mB,gBCtBjDE,EAAgBjB,IAAOkB,IAAV,0JAQbC,EAAgBnB,IAAOkB,IAAV,2MAUbE,EAAqBpB,IAAOkB,IAAV,+JASlBG,EAAerB,YAAOsB,IAAPtB,CAAH,6GAOLuB,EAAY5B,IAAMU,MAAK,WAAO,IAAD,ECnCd,WAAO,IAAD,EACqBR,IADrB,0BACtBlB,EADsB,EACtBA,GAAIC,EADkB,EAClBA,EAAGC,EADe,EACfA,EAAGC,EADY,EACZA,EAAGC,EADS,EACTA,QAASC,EADA,EACAA,OAASwC,EADT,KAGxBC,EAAWC,mBACXC,EAAQD,iBAAO,GACfE,EAAOF,iBAAO,GACdG,EAAOH,iBAAO,GACdI,EAAOJ,iBAAO,GA8CpB,OA5CAC,EAAMI,QAAUpD,EAChBiD,EAAKG,QAAUnD,EACfiD,EAAKE,QAAUlD,EACfiD,EAAKC,QAAUjD,EAEJ,MAAPH,GAAY2B,QAAQC,IAAI5B,GAC5BqD,qBAAU,WACNP,EAASM,SAAWE,cAAcR,EAASM,SACvChD,IACA0C,EAASM,QAAUG,aAAY,WACvBP,EAAMI,QAAU,GAChBP,EAAS/B,EAAckC,EAAMI,QAAU,KAEvCP,EAAS/B,EAAc,IACnBmC,EAAKG,QAAU,GACfP,EAAS/B,EAAamC,EAAKG,QAAU,KAErCP,EAAS/B,EAAa,IAClBoC,EAAKE,QAAU,GACfP,EAAS/B,EAAaoC,EAAKE,QAAU,KAErCP,EAAS/B,EAAa,IACtB+B,EAAS/B,EAAaqC,EAAKC,QAAU,SAIlD,OAER,CAAChD,IAgBG,CACHJ,KACAC,IACAC,IACAC,IACAqD,eAnBmB,WACnBX,EAAS/B,MAmBT2C,eAjBmB,WACnBZ,EAAS/B,MAiBT4C,eAfmB,WACnBb,EAAS/B,KACT+B,EAAS/B,MAcTV,UACAuD,SAba,WACbd,EAAS/B,MAaT8C,aAAcvD,EAAOO,QD1BgFiD,GAAjG1D,EAF8B,EAE9BA,EAAGD,EAF2B,EAE3BA,EAAGE,EAFwB,EAExBA,QAASJ,EAFe,EAEfA,GAAIC,EAFW,EAEXA,EAAGwD,EAFQ,EAERA,eAAgBD,EAFR,EAEQA,eAAgBE,EAFxB,EAEwBA,eAAgBC,EAFxC,EAEwCA,SAAUC,EAFlD,EAEkDA,aAClFE,EAAYC,QAAQ/D,GAAMC,GAAKC,GAAKC,GAE1C,OACI,eAACsC,EAAD,WACI,cAACuB,EAAA,EAAD,CAAOlC,MAAO,CAAEmC,SAAU,UAA1B,SACI,eAAC3B,EAAD,WACI,cAACE,EAAD,UAAgB5C,EAAcO,KAC9B,cAACqC,EAAD,UAAgB5C,EAAcM,KAC9B,cAACsC,EAAD,UAAgB5C,EAAcK,KAC9B,cAACuC,EAAD,UAAgB5C,EAAcI,UAIlC,eAACsC,EAAD,YACMlC,GAAW,cAACsC,EAAD,CAAcwB,KAAK,UAAUC,KAAK,iCAAQC,QAASZ,IAC/DpD,GAAW,cAACsC,EAAD,CAAcwB,KAAK,YAAYC,KAAK,iCAAQC,QAASX,IAChEK,GAAa,cAACpB,EAAD,CAAcwB,KAAK,YAAYC,KAAK,2BAAOC,QAAST,EAAUU,SAAUT,GAAgB,IACrGE,GAAa,cAACpB,EAAD,CAAcwB,KAAK,WAAWC,KAAK,2BAAOC,QAASV,aE7CtEY,I,EAAAA,EAVf,WACI,OACI,eAACC,EAAA,EAAD,WACI,cAAC,EAAD,IACA,cAAC3B,EAAD,IACA,cAACnB,EAAD,Q,gBCLC+C,GAAsB,SAACC,GAQlC,OAAOC,YAAgB,CAAED,cCTdE,GAAmB3D,IAAMC,cAAkDuD,IAAoB,gBCG/FI,GAAoB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAwC,EAC9C3D,IAD8C,mBACjEX,EADiE,KAC1DsC,EAD0D,KAElEiC,EAAe/B,mBACfgC,EAAWhC,iBAAkBxC,GAMnC,OALAwE,EAAS3B,QAAU7C,EACnB8C,qBAAU,WACN1B,QAAQC,IAAI,aACZkD,EAAa1B,QFEQ,SAC3BP,EACA4B,GAEA,IAAMO,EAAYR,GAAoBC,GAStC,OARAO,EAAUC,GAAG,QAAQ,YAA+C,IAA5CC,EAA2C,EAA3CA,eAAgBzE,EAA2B,EAA3BA,KAAMV,EAAqB,EAArBA,UAC5C4B,QAAQC,IAAI,YAAanB,GACrByE,IACFvD,QAAQC,IAAIsD,GACZrC,EAASqC,IAEE,cAATzE,GAAsBoC,EAAS/B,EAAqBf,EAAUoF,QAE7DH,EEfsBI,CAAcvC,GAAU,kBAAMkC,EAAS3B,aAC/D,IAEC,cAACuB,GAAiBU,SAAlB,CAA2BxF,MAAOiF,EAAa1B,QAA/C,SACKyB,K,kBCRPS,GAAS,CACbC,KAAMC,YAAkBC,aACxBC,IAAKF,YAAkBG,YACvBC,IAAKJ,YAAkBK,aAGnBC,GAAgBN,YAAH,wKAINrB,KACW4B,KACAC,MAIXC,GAAiD,SAAC,GAAmB,IAAjBlG,EAAgB,EAAhBA,UACzDmG,EAAQC,mBAAQ,kBAAMb,GAAOvF,KAAY,CAACA,IAChD,OACE,qCACE,cAAC+F,GAAD,IACA,cAACI,EAAD,QC1BOE,GAAgB,SAAC,GAA2C,IAAzCvB,EAAwC,EAAxCA,SAAwC,EAC1CwB,qBAAW/F,EAASR,GADsB,mBAC7DS,EAD6D,KACtDsC,EADsD,KAEpE,OAAO,eAAC9B,EAAasE,SAAd,CAAuBxF,MAAO,CAACU,EAAOsC,GAAtC,UACH,cAAC,GAAD,CAAc9C,UAAWQ,EAAMR,YAC9B8E,MCJIyB,GAAY,SAAC,GAA2C,IAAzCzB,EAAwC,EAAxCA,SACxB,OACI,cAAC,GAAD,UACI,cAAC,GAAD,UACI,cAAC,IAAD,UACKA,SCJrB0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.df9e8b39.chunk.js","sourcesContent":["import { Header } from '@sberdevices/plasma-ui'\r\n\r\nexport const AppHeader = () => {\r\n\r\n  return (\r\n    <Header\r\n      back={false}\r\n      title={'Мой секундомер'}\r\n    />\r\n  )\r\n}","export const addZeroBefore = (value: number): string => {\r\n    return `${value > 9 ? '' : '0'}${value}`\r\n}","import { ActionsType, CharacterType, StateType } from '../types/types'\r\nimport { addZeroBefore } from '../utils/utils'\r\n\r\n\r\nexport const initialState = {\r\n    character: 'sber' as CharacterType,\r\n    ms: 0,\r\n    s: 0,\r\n    m: 0,\r\n    h: 0,\r\n    isGoing: false,\r\n    points: [] as string[]\r\n}\r\n\r\nexport const reducer = (state: StateType, action: ActionsType): StateType => {\r\n    switch (action.type) {\r\n        case 'SET_CHARACTER':\r\n            return { ...state, character: action.characterId }\r\n        case 'SET_H':\r\n            return { ...state, h: action.payload }\r\n        case 'SET_M':\r\n            return { ...state, m: action.payload }\r\n        case 'SET_MS':\r\n            return { ...state, ms: action.payload }\r\n        case 'SET_S':\r\n            return { ...state, s: action.payload }\r\n        case 'START_STOP_WATCH':\r\n            return { ...state, isGoing: true }\r\n        case 'STOP_STOP_WATCH':\r\n            return { ...state, isGoing: false }\r\n        case 'CLEAR_TIMER':\r\n            return { ...state, ms: 0, s: 0, m: 0, h: 0, points: [] }\r\n        case 'ADD_POINT':\r\n            let points = [...state.points]\r\n            if (points.length < 5) points.push(`${addZeroBefore(state.h)}:${addZeroBefore(state.m)}:${addZeroBefore(state.s)}:${addZeroBefore(state.ms)}`)\r\n            return { ...state, points }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setCharacter: (characterId: CharacterType) => ({ type: 'SET_CHARACTER', characterId } as const),\r\n    setm: (payload: number) => ({ type: 'SET_M', payload } as const),\r\n    setms: (payload: number) => ({ type: 'SET_MS', payload } as const),\r\n    sets: (payload: number) => ({ type: 'SET_S', payload } as const),\r\n    seth: (payload: number) => ({ type: 'SET_H', payload } as const),\r\n    clearTimer: () => ({ type: 'CLEAR_TIMER' } as const),\r\n    startStopWatch: () => ({ type: 'START_STOP_WATCH' } as const),\r\n    stopStopWatch: () => ({ type: 'STOP_STOP_WATCH' } as const),\r\n    addPoint: () => ({ type: 'ADD_POINT' } as const),\r\n}","import { StateType, ActionsType } from './../types/types'\r\nimport React, { Dispatch } from 'react'\r\nimport { initialState } from '../store/store'\r\n\r\nexport const StoreContext = React.createContext<[StateType, Dispatch<ActionsType>]>([\r\n  initialState,\r\n  () => null\r\n])","import { useContext } from 'react'\r\nimport { StoreContext } from '../context/storeContext'\r\n\r\nexport const useStore = () => {\r\n  return useContext(StoreContext)\r\n}","import { Card, CardBody, CardContent, TextBox } from '@sberdevices/plasma-ui'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useStore } from '../hooks/useStore'\r\n\r\nconst PositionedCard = styled(Card)`\r\n    position: absolute;\r\n    bottom: 2rem;\r\n    right: 2rem;\r\n`\r\n\r\nconst MarginTextBox = styled(TextBox)`\r\n    margin-bottom: 1rem;\r\n`\r\n\r\nexport const RoundList = React.memo(() => {\r\n    const [state, _] = useStore()\r\n    console.log('Component2 render')\r\n    return (\r\n        <>\r\n            {\r\n                state.points.length &&\r\n                <PositionedCard>\r\n                    <CardBody style={{ height: '100%', alignItems: 'center' }}>\r\n                        <CardContent style={{ height: '100%' }} cover={false}>\r\n                            {\r\n                                state.points.map((point, i) => (\r\n                                    <MarginTextBox>\r\n                                        Круг {i + 1}: {point}\r\n                                    </MarginTextBox>\r\n                                ))\r\n                            }\r\n                        </CardContent>\r\n                    </CardBody>\r\n                </PositionedCard>\r\n            }\r\n        </>\r\n    )\r\n}\r\n)\r\n\r\n// export const ComponentMemo = React.memo(Component)\r\n","import { Body1, Button } from '@sberdevices/plasma-ui'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useStopWatch } from '../hooks/useStopWatch'\r\nimport { addZeroBefore } from '../utils/utils'\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    /* width: 35rem; */\r\n    margin: auto;\r\n    margin-bottom: 3rem;\r\n`\r\n\r\nconst TimeContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #006eff4b;\r\n    border-radius: 0.8rem;\r\n    width: 4rem;\r\n    height: 5rem;\r\n`\r\n\r\nconst StopWatchContainer = styled.div`\r\n    width: 33rem;\r\n    margin: 5rem auto;\r\n    text-align: center;\r\n    @media (max-width: 650px) {\r\n        width: 300px;\r\n    }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n    width: 10rem;\r\n    @media (max-width: 650px) {\r\n        width: 8rem;\r\n    }\r\n`\r\n\r\nexport const StopWatch = React.memo(() => {\r\n\r\n    const { h, m, isGoing, ms, s, pauseStopWatch, startStopWatch, resetStopWatch, addRound, roundsNumber } = useStopWatch()\r\n    const isAnyTime = Boolean(ms || s || m || h)\r\n\r\n    return (\r\n        <StopWatchContainer>\r\n            <Body1 style={{ fontSize: '2.2rem' }} >\r\n                <FlexContainer>\r\n                    <TimeContainer>{addZeroBefore(h)}</TimeContainer>\r\n                    <TimeContainer>{addZeroBefore(m)}</TimeContainer>\r\n                    <TimeContainer>{addZeroBefore(s)}</TimeContainer>\r\n                    <TimeContainer>{addZeroBefore(ms)}</TimeContainer>\r\n                </FlexContainer>\r\n            </Body1>\r\n            {\r\n                <FlexContainer>\r\n                    {!isGoing && <StyledButton view='success' text='Старт' onClick={startStopWatch} />}\r\n                    {isGoing && <StyledButton view='secondary' text='Пауза' onClick={pauseStopWatch} />}\r\n                    {isAnyTime && <StyledButton view='secondary' text='Круг' onClick={addRound} disabled={roundsNumber >= 5} />}\r\n                    {isAnyTime && <StyledButton view='critical' text='Стоп' onClick={resetStopWatch} />}\r\n                </FlexContainer>\r\n            }\r\n        </StopWatchContainer>\r\n    )\r\n}\r\n)\r\n\r\n// export const ComponentMemo = React.memo(Component)\r\n","import { useEffect, useRef } from 'react'\r\nimport { actions } from '../store/store'\r\nimport { useStore } from './useStore'\r\n\r\n\r\nexport const useStopWatch = () => {\r\n    const [{ms, s, m, h, isGoing, points}, dispatch] = useStore()\r\n\r\n    const interval = useRef<NodeJS.Timeout>()\r\n    const msRef = useRef(0)\r\n    const sRef = useRef(0)\r\n    const mRef = useRef(0)\r\n    const hRef = useRef(0)\r\n\r\n    msRef.current = ms\r\n    sRef.current = s\r\n    mRef.current = m\r\n    hRef.current = h\r\n\r\n    if (ms === 100) console.log(ms)\r\n    useEffect(() => {\r\n        interval.current && clearInterval(interval.current)\r\n        if (isGoing){\r\n            interval.current = setInterval(() => {\r\n                if (msRef.current < 99) {\r\n                    dispatch(actions.setms(msRef.current + 1))\r\n                } else {\r\n                    dispatch(actions.setms(0))\r\n                    if (sRef.current < 59){\r\n                        dispatch(actions.sets(sRef.current + 1))\r\n                    } else {\r\n                        dispatch(actions.sets(0))\r\n                        if (mRef.current < 59){\r\n                            dispatch(actions.setm(mRef.current + 1))\r\n                        } else {\r\n                            dispatch(actions.setm(0))\r\n                            dispatch(actions.seth(hRef.current + 1))\r\n                        }\r\n                    }\r\n                }\r\n            }, 10)\r\n        }\r\n    }, [isGoing])\r\n\r\n    const startStopWatch = () => {\r\n        dispatch(actions.startStopWatch())\r\n    }\r\n    const pauseStopWatch = () => {\r\n        dispatch(actions.stopStopWatch())\r\n    }\r\n    const resetStopWatch = () => {\r\n        dispatch(actions.stopStopWatch())\r\n        dispatch(actions.clearTimer())\r\n    }\r\n    const addRound = () => {\r\n        dispatch(actions.addPoint())\r\n    }\r\n\r\n    return {\r\n        ms,\r\n        s,\r\n        m,\r\n        h,\r\n        startStopWatch,\r\n        pauseStopWatch,\r\n        resetStopWatch,\r\n        isGoing,\r\n        addRound,\r\n        roundsNumber: points.length\r\n    }\r\n}","import { Container } from '@sberdevices/plasma-ui'\nimport { AppHeader } from './components/AppHeader'\nimport { RoundList } from './components/RoundList'\nimport { StopWatch } from './components/StopWatch'\n\nfunction App() {\n    return (\n        <Container>\n            <AppHeader />\n            <StopWatch />\n            <RoundList />\n        </Container>\n    )\n}\n\nexport default App\n\n","import { createSmartappDebugger, createAssistant } from '@sberdevices/assistant-client'\r\nimport { Dispatch } from 'react'\r\nimport { actions } from '../store/store'\r\nimport { StateType } from '../types/types'\r\n\r\nexport const initializeAssistant = (getState: () => any) => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    return createSmartappDebugger({\r\n      token: process.env.REACT_APP_ASSISTANT_TOKEN ?? '',\r\n      initPhrase: 'Запусти мой секундомер',\r\n      getState\r\n    })\r\n  }\r\n  return createAssistant({ getState })\r\n}\r\n\r\nexport const initAssistant = (\r\n  dispatch: Dispatch<any>,\r\n  getState: () => StateType\r\n  ) => {\r\n  const assistant = initializeAssistant(getState)\r\n  assistant.on('data', ({ smart_app_data, type, character }: any) => {\r\n    console.log('data type', type)\r\n    if (smart_app_data) {\r\n      console.log(smart_app_data)\r\n      dispatch(smart_app_data)\r\n    }\r\n    if (type === 'character') dispatch(actions.setCharacter(character.id))\r\n  })\r\n  return assistant\r\n}","import { initializeAssistant } from './../assistant/assistant';\r\nimport React from 'react'\r\nimport { createAssistant } from '@sberdevices/assistant-client'\r\n\r\nexport const AssistantContext = React.createContext<ReturnType<typeof createAssistant>>(initializeAssistant(() => {}))","import { createAssistant } from '@sberdevices/assistant-client'\r\nimport { ReactNode, useEffect, useRef } from 'react'\r\nimport { initAssistant } from '../../assistant/assistant'\r\nimport { AssistantContext } from '../../context/assistantContext'\r\nimport { useStore } from '../../hooks/useStore'\r\nimport { StateType } from '../../types/types'\r\n\r\nexport const AssistantProvider = ({ children }: { children: ReactNode }) => {\r\n    const [state, dispatch] = useStore()\r\n    const assistantRef = useRef<ReturnType<typeof createAssistant>>()\r\n    const stateRef = useRef<StateType>(state)\r\n    stateRef.current = state\r\n    useEffect(() => {\r\n        console.log('useEffect')\r\n        assistantRef.current = initAssistant(dispatch, () => stateRef.current)\r\n    }, [])\r\n    return (\r\n        <AssistantContext.Provider value={assistantRef.current as ReturnType<typeof createAssistant>}>\r\n            {children}\r\n        </AssistantContext.Provider>\r\n    )\r\n}\r\n","import { FC, useMemo } from 'react'\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport { darkSber, darkEva, darkJoy } from '@sberdevices/plasma-tokens/themes'\r\nimport {\r\n  text, // Цвет текста\r\n  background, // Цвет подложки\r\n  gradient, // Градиент\r\n} from '@sberdevices/plasma-tokens'\r\nimport { CharacterType } from '../types/types'\r\n\r\nconst themes = {\r\n  sber: createGlobalStyle(darkSber),\r\n  eva: createGlobalStyle(darkEva),\r\n  joy: createGlobalStyle(darkJoy),\r\n}\r\n\r\nconst DocumentStyle = createGlobalStyle`\r\n  html:root {\r\n    padding-top: 1rem;\r\n    min-height: 100vh;\r\n    color: ${text};\r\n    background-color: ${background};\r\n    background-image: ${gradient};\r\n  }\r\n`\r\n\r\nexport const GlobalStyles: FC<{ character: CharacterType }> = ({ character }) => {\r\n  const Theme = useMemo(() => themes[character], [character])\r\n  return (\r\n    <>\r\n      <DocumentStyle />\r\n      <Theme />\r\n    </>\r\n  )\r\n}","import { ReactNode, useReducer } from 'react'\r\nimport { StoreContext } from '../../context/storeContext'\r\nimport { initialState, reducer } from '../../store/store'\r\nimport { GlobalStyles } from '../GlobalStyle'\r\n\r\nexport const StoreProvider = ({ children }: { children: ReactNode }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    return <StoreContext.Provider value={[state, dispatch]}>\r\n        <GlobalStyles character={state.character} />\r\n        {children}\r\n    </StoreContext.Provider>\r\n}\r\n","import { DeviceThemeProvider } from '@sberdevices/plasma-ui'\r\nimport { ReactNode } from 'react'\r\nimport { AssistantProvider } from './AssistantProvider'\r\nimport { StoreProvider } from './StoreProvider'\r\n\r\nexport const Providers = ({ children }: { children: ReactNode }) => {\r\n    return (\r\n        <StoreProvider>\r\n            <AssistantProvider>\r\n                <DeviceThemeProvider>\r\n                    {children}\r\n                </DeviceThemeProvider>\r\n            </AssistantProvider>\r\n        </StoreProvider>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Providers } from './components/providers/Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}