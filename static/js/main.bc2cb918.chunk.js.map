{"version":3,"sources":["utils/utils.ts","store/store.ts","assistant/assistant.ts","context/assistantContext.ts","components/AppHeader.tsx","hooks/useAssistant.ts","context/storeContext.ts","hooks/useStore.ts","components/RoundList.tsx","components/StopWatch.tsx","hooks/useStopWatch.ts","App.tsx","components/providers/AssistantProvider.tsx","components/GlobalStyle.tsx","components/providers/StoreProvider.tsx","components/providers/Providers.tsx","index.tsx"],"names":["addZeroBefore","value","initialState","character","ms","s","m","h","isGoing","points","reducer","state","action","type","characterId","payload","length","push","actions","initializeAssistant","getState","createAssistant","AssistantContext","React","createContext","StyledHeader","styled","Header","AppHeader","assistant","useContext","minimize","onMinimizeClick","close","back","title","StoreContext","useStore","PositionedCard","Card","MarginTextBox","TextBox","RoundList","memo","CardBody","style","height","alignItems","CardContent","cover","map","point","i","FlexContainer","div","TimeContainer","StopWatchContainer","StyledButton","Button","StopWatch","dispatch","interval","useRef","msRef","sRef","mRef","hRef","isGoingRef","current","useEffect","clearInterval","setInterval","startStopWatch","pauseStopWatch","resetStopWatch","addRound","roundsNumber","useStopWatch","isAnyTime","Boolean","Body","fontSize","view","text","onClick","disabled","App","Container","AssistantProvider","children","assistantRef","stateRef","console","log","on","smart_app_data","sendAction","id","initAssistant","Provider","themes","sber","createGlobalStyle","darkSber","eva","darkEva","joy","darkJoy","DocumentStyle","background","gradient","GlobalStyles","Theme","useMemo","StoreProvider","useReducer","Providers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc2cb918.chunk.js","sourcesContent":["export const addZeroBefore = (value: number): string => {\r\n    return `${value > 9 ? '' : '0'}${value}`\r\n}","import { ActionsType, CharacterType, StateType } from '../types/types'\r\nimport { addZeroBefore } from '../utils/utils'\r\n\r\n\r\nexport const initialState = {\r\n    character: 'sber' as CharacterType,\r\n    ms: 0,\r\n    s: 0,\r\n    m: 0,\r\n    h: 0,\r\n    isGoing: false,\r\n    points: [] as string[]\r\n}\r\n\r\nexport const reducer = (state: StateType, action: ActionsType): StateType => {\r\n    switch (action.type) {\r\n        case 'SET_CHARACTER':\r\n            return { ...state, character: action.characterId }\r\n        case 'SET_H':\r\n            return { ...state, h: action.payload }\r\n        case 'SET_M':\r\n            return { ...state, m: action.payload }\r\n        case 'SET_MS':\r\n            return { ...state, ms: action.payload }\r\n        case 'SET_S':\r\n            return { ...state, s: action.payload }\r\n        case 'START_STOP_WATCH':\r\n            return { ...state, isGoing: true }\r\n        case 'STOP_STOP_WATCH':\r\n            return { ...state, isGoing: false }\r\n        case 'CLEAR_TIMER':\r\n            return { ...state, ms: 0, s: 0, m: 0, h: 0, points: [] }\r\n        case 'ADD_POINT':\r\n            let points = [...state.points]\r\n            if (points.length < 5) points.push(`${addZeroBefore(state.h)}:${addZeroBefore(state.m)}:${addZeroBefore(state.s)}:${addZeroBefore(state.ms)}`)\r\n            return { ...state, points }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setCharacter: (characterId: CharacterType) => ({ type: 'SET_CHARACTER', characterId } as const),\r\n    setm: (payload: number) => ({ type: 'SET_M', payload } as const),\r\n    setms: (payload: number) => ({ type: 'SET_MS', payload } as const),\r\n    sets: (payload: number) => ({ type: 'SET_S', payload } as const),\r\n    seth: (payload: number) => ({ type: 'SET_H', payload } as const),\r\n    clearTimer: () => ({ type: 'CLEAR_TIMER' } as const),\r\n    startStopWatch: () => ({ type: 'START_STOP_WATCH' } as const),\r\n    stopStopWatch: () => ({ type: 'STOP_STOP_WATCH' } as const),\r\n    addPoint: () => ({ type: 'ADD_POINT' } as const),\r\n}","import { createSmartappDebugger, createAssistant } from '@sberdevices/assistant-client'\r\nimport { Dispatch } from 'react'\r\nimport { actions } from '../store/store'\r\nimport { StateType } from '../types/types'\r\n\r\nexport const initializeAssistant = (getState: () => any) => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    return createSmartappDebugger({\r\n      token: process.env.REACT_APP_ASSISTANT_TOKEN ?? '',\r\n      initPhrase: 'Запусти мой секундомер',\r\n      getState\r\n    })\r\n  }\r\n  return createAssistant({ getState })\r\n}\r\n\r\nexport const initAssistant = (\r\n  dispatch: Dispatch<any>,\r\n  getState: () => StateType\r\n  ) => {\r\n  const assistant = initializeAssistant(getState)\r\n  assistant.on('data', ({ smart_app_data, type, character }: any) => {\r\n    if (smart_app_data) {\r\n      console.log(smart_app_data)\r\n      dispatch(smart_app_data)\r\n    }\r\n    if (smart_app_data.type === 'GET_CURRENT_TIME'){\r\n        assistant.sendAction({\r\n            type: 'CURRENT_TIME',\r\n            payload: {}\r\n        })\r\n    }\r\n    if (type === 'character') dispatch(actions.setCharacter(character.id))\r\n  })\r\n  return assistant\r\n}","import { initializeAssistant } from './../assistant/assistant';\r\nimport React from 'react'\r\nimport { createAssistant } from '@sberdevices/assistant-client'\r\n\r\nexport const AssistantContext = React.createContext<ReturnType<typeof createAssistant>>(initializeAssistant(() => {}))","import { Header } from '@sberdevices/plasma-ui'\r\nimport styled from 'styled-components'\r\nimport { useAssistant } from '../hooks/useAssistant'\r\n\r\nconst StyledHeader = styled(Header)`\r\n    @media (min-width: 650px) {\r\n        padding: 1rem;\r\n    }\r\n`\r\n\r\nexport const AppHeader = () => {\r\n    const assistant = useAssistant()\r\n    const closeApp = () => {\r\n        assistant.close()\r\n    }\r\n    return (\r\n        <StyledHeader\r\n            minimize={true}\r\n            onMinimizeClick={closeApp}\r\n            back={false}\r\n            title={'Мой секундомер'}\r\n        />\r\n    )\r\n}","import { AssistantContext } from './../context/assistantContext';\r\nimport { useContext } from 'react'\r\n\r\nexport const useAssistant = () => {\r\n  return useContext(AssistantContext)\r\n}","import { StateType, ActionsType } from './../types/types'\r\nimport React, { Dispatch } from 'react'\r\nimport { initialState } from '../store/store'\r\n\r\nexport const StoreContext = React.createContext<[StateType, Dispatch<ActionsType>]>([\r\n  initialState,\r\n  () => null\r\n])","import { useContext } from 'react'\r\nimport { StoreContext } from '../context/storeContext'\r\n\r\nexport const useStore = () => {\r\n  return useContext(StoreContext)\r\n}","import { Card, CardBody, CardContent, TextBox } from '@sberdevices/plasma-ui'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useStore } from '../hooks/useStore'\r\n\r\nconst PositionedCard = styled(Card)`\r\n    max-width: max-content;\r\n    margin-left: auto;\r\n    margin-top: -2rem;\r\n    margin-bottom: 4rem;\r\n`\r\n\r\nconst MarginTextBox = styled(TextBox)`\r\n    margin-top: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n`\r\n\r\nexport const RoundList = React.memo(() => {\r\n    const [state, _] = useStore()\r\n    return (\r\n        <>\r\n            {\r\n                !!state.points.length &&\r\n                <PositionedCard>\r\n                    <CardBody style={{ height: '100%', alignItems: 'center' }}>\r\n                        <CardContent style={{ height: '100%' }} cover={false}>\r\n                            {\r\n                                state.points.map((point, i) => (\r\n                                    <MarginTextBox>\r\n                                        Круг {i + 1}: {point}\r\n                                    </MarginTextBox>\r\n                                ))\r\n                            }\r\n                        </CardContent>\r\n                    </CardBody>\r\n                </PositionedCard>\r\n            }\r\n        </>\r\n    )\r\n}\r\n)\r\n","import { Body1, Button } from '@sberdevices/plasma-ui'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useStopWatch } from '../hooks/useStopWatch'\r\nimport { addZeroBefore } from '../utils/utils'\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    /* width: 35rem; */\r\n    margin: auto;\r\n    margin-bottom: 3rem;\r\n`\r\n\r\nconst TimeContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #006eff2d;\r\n    border-radius: 0.8rem;\r\n    width: 4rem;\r\n    height: 5rem;\r\n`\r\n\r\nconst StopWatchContainer = styled.div`\r\n    width: 31rem;\r\n    margin: 0 auto;\r\n    margin-top: 1rem;\r\n    text-align: center;\r\n    @media (max-width: 650px) {\r\n        width: 325px;\r\n        margin: 0 auto;\r\n        margin-top: 4rem;\r\n    }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n    width: 9rem;\r\n    @media (max-width: 650px) {\r\n        width: 6.4rem;\r\n    }\r\n`\r\n\r\nexport const StopWatch = React.memo(() => {\r\n\r\n    const { h, m, isGoing, ms, s, pauseStopWatch, startStopWatch, resetStopWatch, addRound, roundsNumber } = useStopWatch()\r\n    const isAnyTime = Boolean(ms || s || m || h)\r\n\r\n    return (\r\n        <StopWatchContainer>\r\n            <Body1 style={{ fontSize: '2.2rem' }} >\r\n                <FlexContainer>\r\n                    <TimeContainer>{addZeroBefore(h)}</TimeContainer>\r\n                    <TimeContainer>{addZeroBefore(m)}</TimeContainer>\r\n                    <TimeContainer>{addZeroBefore(s)}</TimeContainer>\r\n                    <TimeContainer>{addZeroBefore(ms)}</TimeContainer>\r\n                </FlexContainer>\r\n            </Body1>\r\n            {\r\n                <FlexContainer>\r\n                    {!isGoing && <StyledButton view='accent' text='Старт' onClick={startStopWatch} />}\r\n                    {isGoing && <StyledButton view='secondary' text='Пауза' onClick={pauseStopWatch} />}\r\n                    {isAnyTime && <StyledButton view='secondary' text='Круг' onClick={addRound} disabled={roundsNumber >= 5} />}\r\n                    {isAnyTime && <StyledButton view='critical' text='Стоп' onClick={resetStopWatch} />}\r\n                </FlexContainer>\r\n            }\r\n        </StopWatchContainer>\r\n    )\r\n}\r\n)\r\n","import { useEffect, useRef } from 'react'\r\nimport { actions } from '../store/store'\r\nimport { useStore } from './useStore'\r\n\r\n\r\nexport const useStopWatch = () => {\r\n    const [{ms, s, m, h, isGoing, points}, dispatch] = useStore()\r\n\r\n    const interval = useRef<NodeJS.Timeout>()\r\n    const msRef = useRef(0)\r\n    const sRef = useRef(0)\r\n    const mRef = useRef(0)\r\n    const hRef = useRef(0)\r\n    const isGoingRef = useRef(false)\r\n\r\n    msRef.current = ms\r\n    sRef.current = s\r\n    mRef.current = m\r\n    hRef.current = h\r\n    isGoingRef.current = isGoing\r\n\r\n    useEffect(() => {\r\n        interval.current && clearInterval(interval.current)\r\n        if (isGoing){\r\n            interval.current = setInterval(() => {\r\n                if (isGoingRef.current) {\r\n                    if (msRef.current < 99) {\r\n                        dispatch(actions.setms(msRef.current + 1))\r\n                    } else {\r\n                        dispatch(actions.setms(0))\r\n                        if (sRef.current < 59) {\r\n                            dispatch(actions.sets(sRef.current + 1))\r\n                        } else {\r\n                            dispatch(actions.sets(0))\r\n                            if (mRef.current < 59) {\r\n                                dispatch(actions.setm(mRef.current + 1))\r\n                            } else {\r\n                                dispatch(actions.setm(0))\r\n                                dispatch(actions.seth(hRef.current + 1))\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }, 10)\r\n        }\r\n    }, [isGoing])\r\n\r\n    const startStopWatch = () => {\r\n        dispatch(actions.startStopWatch())\r\n    }\r\n    const pauseStopWatch = () => {\r\n        dispatch(actions.stopStopWatch())\r\n    }\r\n    const resetStopWatch = () => {\r\n        dispatch(actions.stopStopWatch())\r\n        dispatch(actions.clearTimer())\r\n    }\r\n    const addRound = () => {\r\n        dispatch(actions.addPoint())\r\n    }\r\n\r\n    return {\r\n        ms,\r\n        s,\r\n        m,\r\n        h,\r\n        startStopWatch,\r\n        pauseStopWatch,\r\n        resetStopWatch,\r\n        isGoing,\r\n        addRound,\r\n        roundsNumber: points.length\r\n    }\r\n}","import { Container } from '@sberdevices/plasma-ui'\nimport { AppHeader } from './components/AppHeader'\nimport { RoundList } from './components/RoundList'\nimport { StopWatch } from './components/StopWatch'\n\nfunction App() {\n    return (\n        <Container>\n            <AppHeader />\n            <StopWatch />\n            <RoundList />\n        </Container>\n    )\n}\n\nexport default App\n\n","import { createAssistant } from '@sberdevices/assistant-client'\r\nimport { ReactNode, useEffect, useRef } from 'react'\r\nimport { initAssistant } from '../../assistant/assistant'\r\nimport { AssistantContext } from '../../context/assistantContext'\r\nimport { useStore } from '../../hooks/useStore'\r\nimport { StateType } from '../../types/types'\r\n\r\nexport const AssistantProvider = ({ children }: { children: ReactNode }) => {\r\n    const [state, dispatch] = useStore()\r\n    const assistantRef = useRef<ReturnType<typeof createAssistant>>()\r\n    const stateRef = useRef<StateType>(state)\r\n    stateRef.current = state\r\n    useEffect(() => {\r\n        console.log('useEffect')\r\n        assistantRef.current = initAssistant(dispatch, () => stateRef.current)\r\n    }, [])\r\n    return (\r\n        <AssistantContext.Provider value={assistantRef.current as ReturnType<typeof createAssistant>}>\r\n            {children}\r\n        </AssistantContext.Provider>\r\n    )\r\n}\r\n","import { FC, useMemo } from 'react'\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport { darkSber, darkEva, darkJoy } from '@sberdevices/plasma-tokens/themes'\r\nimport {\r\n  text, // Цвет текста\r\n  background, // Цвет подложки\r\n  gradient, // Градиент\r\n} from '@sberdevices/plasma-tokens'\r\nimport { CharacterType } from '../types/types'\r\n\r\nconst themes = {\r\n  sber: createGlobalStyle(darkSber),\r\n  eva: createGlobalStyle(darkEva),\r\n  joy: createGlobalStyle(darkJoy),\r\n}\r\n\r\nconst DocumentStyle = createGlobalStyle`\r\n  html:root {\r\n    padding-top: 1rem;\r\n    min-height: 100vh;\r\n    color: ${text};\r\n    background-color: ${background};\r\n    background-image: ${gradient};\r\n  }\r\n`\r\n\r\nexport const GlobalStyles: FC<{ character: CharacterType }> = ({ character }) => {\r\n  const Theme = useMemo(() => themes[character], [character])\r\n  return (\r\n    <>\r\n      <DocumentStyle />\r\n      <Theme />\r\n    </>\r\n  )\r\n}","import { ReactNode, useReducer } from 'react'\r\nimport { StoreContext } from '../../context/storeContext'\r\nimport { initialState, reducer } from '../../store/store'\r\nimport { GlobalStyles } from '../GlobalStyle'\r\n\r\nexport const StoreProvider = ({ children }: { children: ReactNode }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    return <StoreContext.Provider value={[state, dispatch]}>\r\n        <GlobalStyles character={state.character} />\r\n        {children}\r\n    </StoreContext.Provider>\r\n}\r\n","import { DeviceThemeProvider } from '@sberdevices/plasma-ui'\r\nimport { ReactNode } from 'react'\r\nimport { AssistantProvider } from './AssistantProvider'\r\nimport { StoreProvider } from './StoreProvider'\r\n\r\nexport const Providers = ({ children }: { children: ReactNode }) => {\r\n    return (\r\n        <StoreProvider>\r\n            <AssistantProvider>\r\n                <DeviceThemeProvider>\r\n                    {children}\r\n                </DeviceThemeProvider>\r\n            </AssistantProvider>\r\n        </StoreProvider>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Providers } from './components/providers/Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}